Data Access Library (DAL) - INSTALL
===================================

For most users, obtaining and building the DAL sources requires installing a few packages easily available for most Linux and MacOS installations.
Building documentation and Python bindings (both default: on) requires some additional packages, also easily available.
Both can be turned off (see below). Documentation can also be browsed online (see README).

If the latest DAL sources do not build cleanly on your system with all dependencies, please let us know (see the file 'Contributing').


Retrieving DAL
--------------

To grab a copy of the DAL repository into a (new) directory 'DAL', run:

	git clone https://github.com/nextgen-astrodata/DAL.git DAL


Build Instructions
------------------

	mkdir build
	cd build
	cmake ..
	make
	make install                            # with sufficient privileges

If cmake does not find the (preferred) HDF5 includes and libraries, provide a hint to the Find module by setting the HDF5_ROOT_DIR environment variable.

To do a multi-threaded build, set the MAKEFLAGS environment variable to -j<NCPUS> before running 'make'. On Linux, you can run:
	export MAKEFLAGS=-j`cat /proc/cpuinfo | grep processor | wc -l`

To run the test suite:
	make test

To uninstall, run: (only works after any previous 'make install'; still leaves empty installation directories behind)
	make uninstall				# with sufficient privileges


Additional CMake Variables
--------------------------

The following custom flags can be added to the cmake command line:

	-DCMAKE_BUILD_TYPE=RelWithDebInfo       Select build flags. RelWithDebInfo: '-O2 -g' (default), Debug: '-g', Release: '-O3 -DNDEBUG'
	-DCMAKE_INSTALL_PREFIX=$PWD             Install DAL into the indicated path (default: /usr/local).
	-DPYTHON_SITE_PACKAGES=$PWD/python      Install DAL Python bindings into the indicated path (default: derived from Python interpreter)
	-DPYTHON_VERSION=2.x                    Python version 2.x to compile the bindings against (default: derived from Python library)

	-DGENERATE_DOCS=OFF                     Do not generate documentation.
	-DPYTHON_BINDINGS=OFF                   Do not generate Python bindings.
	-DQUIET_HDF5_ERRORS=OFF                 Do not override the HDF5 error handler (exceptions will still be thrown, but
                                                the default HDF5 handler will also print the full error stack on stderr).


Dependencies
------------

To build DAL (default config), you need the following packages:
	- cmake 2.8+
	- make
	- g++ or llvm/clang

	- libhdf5-1.8 or later
	- libhdf5-dev-1.8+

	- python        (version 2.3+; for the Python bindings)
	- python-numpy  (idem)
	- python-dev    (idem)
	- swig 1.3+     (generate Python bindings, idem)

	- python-sphinx (generate user manual)
	- doxygen 1.6+  (generate API documentation and python docstring support)

	- casacore      (to exchange datasets with casacore (incomplete, ask us) (default: off))

Maintainer and developer builds, additionally:
	- git           (source version control)
	- cmake-curses-gui (ccmake) (graphical list to configure all CMake config variables)
	- valgrind      (run C++ tests again under valgrind to track memory related bugs)
	- texlive (pdflatex) (regenerate design documentation (default: off, Makefile provided))


For Linux Debian/Ubuntu/Mint users, install dependencies using (with sufficient privileges):
	apt-get install libhdf5-serial-1.8.4 libhdf5-serial-dev        # the hdf5 mpi variants are fine too
	apt-get install cmake make g++ python python-numpy python-dev swig python-sphinx doxygen 
	apt-get install git cmake-curses-gui valgrind                  # optional

