include(InstallRequiredSystemLibraries)

set(CPACK_GENERATOR "DEB;RPM")

# Components
set(CPACK_COMPONENTS_ALL libraries headers python documentation)
set(CPACK_COMPONENT_LIBRARIES_DISPLAY_NAME "C++ Libraries")
set(CPACK_COMPONENT_HEADERS_DISPLAY_NAME "C++ Headers")
set(CPACK_COMPONENT_HEADERS_DEPENDS libraries)
set(CPACK_COMPONENT_PYTHON_DISPLAY_NAME "Python Bindings")
set(CPACK_COMPONENT_DOCUMENTATION_DISPLAY_NAME "Documentation")

# General settings
set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "DAL - Data Access Library for HDF5 datasets from the LOFAR radio telescope and other sources")
set(CPACK_PACKAGE_DESCRIPTION_FILE "${CMAKE_CURRENT_SOURCE_DIR}/../README")
set(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/../COPYING.LESSER")
set(CPACK_PACKAGE_VERSION_MAJOR "${DAL_VERSION_MAJOR}")
set(CPACK_PACKAGE_VERSION_MINOR "${DAL_VERSION_MINOR}")
set(CPACK_PACKAGE_VERSION_PATCH "${DAL_VERSION_PATCH}")

set(CPACK_PACKAGE_VENDOR "Netherlands Institude for Radio Astronomy (ASTRON)")
set(CPACK_PACKAGE_CONTACT "Dr. Jan David Mol (mol@astron.nl)")

set(CPACK_PACKAGE_INSTALL_DIRECTORY "CMake ${CMake_VERSION_MAJOR}.${CMake_VERSION_MINOR}")

# Dependencies for each generator
if(PYTHON_BINDINGS)
  set(CPACK_DEBIAN_PACKAGE_DEPENDS "libhdf5 (= ${HDF5_VERSION}), python${PYTHON_VERSION}, python-numpy")
  set(CPACK_RPM_PACKAGE_REQUIRES "libhdf5 = ${HDF5_VERSION}, python${PYTHON_VERSION}")
else(PYTHON_BINDINGS)
  set(CPACK_DEBIAN_PACKAGE_DEPENDS "libhdf5 (= ${HDF5_VERSION})")
  set(CPACK_RPM_PACKAGE_REQUIRES "libhdf5 = ${HDF5_VERSION}")
endif(PYTHON_BINDINGS)

# DEB settings
set(CPACK_DEBIAN_PACKAGE_SECTION "libs")

if(NOT CPACK_DEBIAN_PACKAGE_ARCHITECTURE AND NOT CMAKE_CROSSCOMPILING)
  find_program(DPKG_CMD dpkg)

  if(DPKG_CMD)
    execute_process(COMMAND "${DPKG_CMD}" --print-architecture
      OUTPUT_VARIABLE CPACK_DEBIAN_PACKAGE_ARCHITECTURE
      OUTPUT_STRIP_TRAILING_WHITESPACE
    )
  endif(DPKG_CMD)
endif(NOT CPACK_DEBIAN_PACKAGE_ARCHITECTURE AND NOT CMAKE_CROSSCOMPILING)

# RPM settings
set(CPACK_RPM_PACKAGE_LICENSE "LGPL v3")
set(CPACK_RPM_PACKAGE_GROUP "Development/Libraries")

# This must be last!
include(CPack)


