The Data Access Library (DAL) - Installation Instructions
=========================================================

For most users, obtaining and building the DAL sources requires few dependencies and little effort.
Building documentation (default: on) requires more packages, but can be turned off (see below) and browsed online (see README.txt).

If the latest DAL sources do not build cleanly on your system, please let us know (see CONTRIBUTING.txt).


Retrieving DAL
--------------

To grab a copy of the DAL repository into a (new) directory 'DAL', run:

	git clone https://github.com/nextgen-astrodata/DAL.git DAL


Build Instructions
------------------

	mkdir build
	cd build
	cmake ..
	make
	sudo make install

If cmake does not find (the right) HDF5 libs, provide a hint to the Find module by setting the HDF5_ROOT environment variable.

To run the test cases:
	make test

To regenerate the doc strings and doxygen documentation, you need to install doxygen, and run:
	make doc


Additional CMake Variables
--------------------------

The following custom flags can be added to the cmake command line:

	-DCMAKE_INSTALL_PREFIX=$PWD	        Install DAL into the indicated path (default: /usr/local).
	-DPYTHON_SITE_PACKAGES=$PWD/python	Install DAL's Python bindings into the indicated path (default: derived from Python interpreter)
	-DPYTHON_VERSION=X.Y	                Python version to compile the bindings against (default: derived from Python library)

        -DGENERATE_DOCS=OFF                     Do not generate documentation.
        -DPYTHON_BINDINGS=OFF                   Do not generate Python bindings.
        -DQUIET_HDF5_ERRORS=OFF                 Do not override the HDF5 error handler (exceptions will still be thrown, but
                                                the default HDF5 handler will also print the full error stack on stderr).


Dependencies
------------

To use a pre-compiled DAL: (package not available atm)
	- libhdf5-1.8 or later
	- python	(version 2.3+ or 3; if running Python applications)
	- python-numpy	(idem)

	- casacore	(optional, for some higher level functionality)

To build, additionally:
	- cmake 2.8+
	- make
	- g++ or llvm with clang
	- libhdf5-dev-1.8+
	- python-dev

Maintainer and developer builds, additionally:
	- git		(source version control)
	- swig 1.3+	(regenerate Python bindings)

	- doxygen 1.6+	(regenerate API documentation and python docstring support)
	- python-sphinx	(regenerate user manual)

	- cmake-curses-gui (ccmake) (graphical list to configure all DAL CMake config variables)
	- texlive (pdflatex) (regenerate design documentation (default: off))
	- valgrind	(run test suite tracking memory related bugs)

